//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ePs.MicoFormIntegration.Service.MiForms.AuthServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuthServicesSoap", Namespace="http://www.mi-corporation.com/")]
    public partial class AuthServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetKeyPairOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerConnectionSpeedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllowPasswordChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDemographicFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPasswordRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserActiveStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserDemographicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserLockStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupActiveStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersInGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupPrivilegesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupAppsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupFormTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAppToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFormTemplateToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupDemographicFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAppFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFormTemplateFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGroupActiveStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGroupNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrivilegesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGroupPrivilegesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuthServices() {
            this.Url = global::ePs.MicoFormIntegration.Service.Properties.Settings.Default.MiFormsIntegrationService_MiForms_AuthServices_AuthServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetKeyPairCompletedEventHandler GetKeyPairCompleted;
        
        /// <remarks/>
        public event GetAuthTokenCompletedEventHandler GetAuthTokenCompleted;
        
        /// <remarks/>
        public event GetServerConnectionSpeedCompletedEventHandler GetServerConnectionSpeedCompleted;
        
        /// <remarks/>
        public event GetServerInformationCompletedEventHandler GetServerInformationCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event GetUserInformationCompletedEventHandler GetUserInformationCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event GetAllowPasswordChangeCompletedEventHandler GetAllowPasswordChangeCompleted;
        
        /// <remarks/>
        public event GetUserDemographicFieldsCompletedEventHandler GetUserDemographicFieldsCompleted;
        
        /// <remarks/>
        public event SetPasswordCompletedEventHandler SetPasswordCompleted;
        
        /// <remarks/>
        public event SetPasswordRequirementsCompletedEventHandler SetPasswordRequirementsCompleted;
        
        /// <remarks/>
        public event SetUserActiveStatusCompletedEventHandler SetUserActiveStatusCompleted;
        
        /// <remarks/>
        public event SetUserDemographicsCompletedEventHandler SetUserDemographicsCompleted;
        
        /// <remarks/>
        public event SetUserLockStatusCompletedEventHandler SetUserLockStatusCompleted;
        
        /// <remarks/>
        public event SetUsernameCompletedEventHandler SetUsernameCompleted;
        
        /// <remarks/>
        public event GetAllGroupsCompletedEventHandler GetAllGroupsCompleted;
        
        /// <remarks/>
        public event GetGroupsForUserCompletedEventHandler GetGroupsForUserCompleted;
        
        /// <remarks/>
        public event GetGroupActiveStatusCompletedEventHandler GetGroupActiveStatusCompleted;
        
        /// <remarks/>
        public event GetUsersInGroupCompletedEventHandler GetUsersInGroupCompleted;
        
        /// <remarks/>
        public event GetGroupPrivilegesCompletedEventHandler GetGroupPrivilegesCompleted;
        
        /// <remarks/>
        public event GetGroupAppsCompletedEventHandler GetGroupAppsCompleted;
        
        /// <remarks/>
        public event GetGroupFormTemplatesCompletedEventHandler GetGroupFormTemplatesCompleted;
        
        /// <remarks/>
        public event AddGroupCompletedEventHandler AddGroupCompleted;
        
        /// <remarks/>
        public event AddUserToGroupCompletedEventHandler AddUserToGroupCompleted;
        
        /// <remarks/>
        public event AddAppToGroupCompletedEventHandler AddAppToGroupCompleted;
        
        /// <remarks/>
        public event AddFormTemplateToGroupCompletedEventHandler AddFormTemplateToGroupCompleted;
        
        /// <remarks/>
        public event GetGroupDemographicFieldsCompletedEventHandler GetGroupDemographicFieldsCompleted;
        
        /// <remarks/>
        public event RemoveUserFromGroupCompletedEventHandler RemoveUserFromGroupCompleted;
        
        /// <remarks/>
        public event RemoveAppFromGroupCompletedEventHandler RemoveAppFromGroupCompleted;
        
        /// <remarks/>
        public event RemoveFormTemplateFromGroupCompletedEventHandler RemoveFormTemplateFromGroupCompleted;
        
        /// <remarks/>
        public event SetGroupActiveStatusCompletedEventHandler SetGroupActiveStatusCompleted;
        
        /// <remarks/>
        public event SetGroupNameCompletedEventHandler SetGroupNameCompleted;
        
        /// <remarks/>
        public event GetPrivilegesCompletedEventHandler GetPrivilegesCompleted;
        
        /// <remarks/>
        public event SetGroupPrivilegesCompletedEventHandler SetGroupPrivilegesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetKeyPair", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKeyPair(string customerName, string userName) {
            object[] results = this.Invoke("GetKeyPair", new object[] {
                        customerName,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeyPairAsync(string customerName, string userName) {
            this.GetKeyPairAsync(customerName, userName, null);
        }
        
        /// <remarks/>
        public void GetKeyPairAsync(string customerName, string userName, object userState) {
            if ((this.GetKeyPairOperationCompleted == null)) {
                this.GetKeyPairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeyPairOperationCompleted);
            }
            this.InvokeAsync("GetKeyPair", new object[] {
                        customerName,
                        userName}, this.GetKeyPairOperationCompleted, userState);
        }
        
        private void OnGetKeyPairOperationCompleted(object arg) {
            if ((this.GetKeyPairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeyPairCompleted(this, new GetKeyPairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetAuthToken", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuthToken(string customerName, string userName, string encryptedPassword, string requestedTokenExpiration, int requestedTokenRequests) {
            object[] results = this.Invoke("GetAuthToken", new object[] {
                        customerName,
                        userName,
                        encryptedPassword,
                        requestedTokenExpiration,
                        requestedTokenRequests});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthTokenAsync(string customerName, string userName, string encryptedPassword, string requestedTokenExpiration, int requestedTokenRequests) {
            this.GetAuthTokenAsync(customerName, userName, encryptedPassword, requestedTokenExpiration, requestedTokenRequests, null);
        }
        
        /// <remarks/>
        public void GetAuthTokenAsync(string customerName, string userName, string encryptedPassword, string requestedTokenExpiration, int requestedTokenRequests, object userState) {
            if ((this.GetAuthTokenOperationCompleted == null)) {
                this.GetAuthTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthTokenOperationCompleted);
            }
            this.InvokeAsync("GetAuthToken", new object[] {
                        customerName,
                        userName,
                        encryptedPassword,
                        requestedTokenExpiration,
                        requestedTokenRequests}, this.GetAuthTokenOperationCompleted, userState);
        }
        
        private void OnGetAuthTokenOperationCompleted(object arg) {
            if ((this.GetAuthTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthTokenCompleted(this, new GetAuthTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetServerConnectionSpeed", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServerConnectionSpeed(string customerName, string token, string inData) {
            object[] results = this.Invoke("GetServerConnectionSpeed", new object[] {
                        customerName,
                        token,
                        inData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerConnectionSpeedAsync(string customerName, string token, string inData) {
            this.GetServerConnectionSpeedAsync(customerName, token, inData, null);
        }
        
        /// <remarks/>
        public void GetServerConnectionSpeedAsync(string customerName, string token, string inData, object userState) {
            if ((this.GetServerConnectionSpeedOperationCompleted == null)) {
                this.GetServerConnectionSpeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerConnectionSpeedOperationCompleted);
            }
            this.InvokeAsync("GetServerConnectionSpeed", new object[] {
                        customerName,
                        token,
                        inData}, this.GetServerConnectionSpeedOperationCompleted, userState);
        }
        
        private void OnGetServerConnectionSpeedOperationCompleted(object arg) {
            if ((this.GetServerConnectionSpeedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerConnectionSpeedCompleted(this, new GetServerConnectionSpeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetServerInformation", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServerInformation(string customerName, string token) {
            object[] results = this.Invoke("GetServerInformation", new object[] {
                        customerName,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerInformationAsync(string customerName, string token) {
            this.GetServerInformationAsync(customerName, token, null);
        }
        
        /// <remarks/>
        public void GetServerInformationAsync(string customerName, string token, object userState) {
            if ((this.GetServerInformationOperationCompleted == null)) {
                this.GetServerInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerInformationOperationCompleted);
            }
            this.InvokeAsync("GetServerInformation", new object[] {
                        customerName,
                        token}, this.GetServerInformationOperationCompleted, userState);
        }
        
        private void OnGetServerInformationOperationCompleted(object arg) {
            if ((this.GetServerInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerInformationCompleted(this, new GetServerInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetUsers", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUsers(string customerName, string token) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        customerName,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(string customerName, string token) {
            this.GetUsersAsync(customerName, token, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(string customerName, string token, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        customerName,
                        token}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetUserInformation", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInformation(string customerName, string token, string userName) {
            object[] results = this.Invoke("GetUserInformation", new object[] {
                        customerName,
                        token,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInformationAsync(string customerName, string token, string userName) {
            this.GetUserInformationAsync(customerName, token, userName, null);
        }
        
        /// <remarks/>
        public void GetUserInformationAsync(string customerName, string token, string userName, object userState) {
            if ((this.GetUserInformationOperationCompleted == null)) {
                this.GetUserInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInformationOperationCompleted);
            }
            this.InvokeAsync("GetUserInformation", new object[] {
                        customerName,
                        token,
                        userName}, this.GetUserInformationOperationCompleted, userState);
        }
        
        private void OnGetUserInformationOperationCompleted(object arg) {
            if ((this.GetUserInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInformationCompleted(this, new GetUserInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/AddUser", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddUser(string customerName, string token, string newUserName, string newUserPassword, string newUserFirstName, string newUserMiddleName, string newUserLastName, DemographicField[] newUserDemographics, string[] newUserGroups) {
            object[] results = this.Invoke("AddUser", new object[] {
                        customerName,
                        token,
                        newUserName,
                        newUserPassword,
                        newUserFirstName,
                        newUserMiddleName,
                        newUserLastName,
                        newUserDemographics,
                        newUserGroups});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string customerName, string token, string newUserName, string newUserPassword, string newUserFirstName, string newUserMiddleName, string newUserLastName, DemographicField[] newUserDemographics, string[] newUserGroups) {
            this.AddUserAsync(customerName, token, newUserName, newUserPassword, newUserFirstName, newUserMiddleName, newUserLastName, newUserDemographics, newUserGroups, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string customerName, string token, string newUserName, string newUserPassword, string newUserFirstName, string newUserMiddleName, string newUserLastName, DemographicField[] newUserDemographics, string[] newUserGroups, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        customerName,
                        token,
                        newUserName,
                        newUserPassword,
                        newUserFirstName,
                        newUserMiddleName,
                        newUserLastName,
                        newUserDemographics,
                        newUserGroups}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetAllowPasswordChange", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllowPasswordChange(string customerName, string token) {
            object[] results = this.Invoke("GetAllowPasswordChange", new object[] {
                        customerName,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllowPasswordChangeAsync(string customerName, string token) {
            this.GetAllowPasswordChangeAsync(customerName, token, null);
        }
        
        /// <remarks/>
        public void GetAllowPasswordChangeAsync(string customerName, string token, object userState) {
            if ((this.GetAllowPasswordChangeOperationCompleted == null)) {
                this.GetAllowPasswordChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllowPasswordChangeOperationCompleted);
            }
            this.InvokeAsync("GetAllowPasswordChange", new object[] {
                        customerName,
                        token}, this.GetAllowPasswordChangeOperationCompleted, userState);
        }
        
        private void OnGetAllowPasswordChangeOperationCompleted(object arg) {
            if ((this.GetAllowPasswordChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllowPasswordChangeCompleted(this, new GetAllowPasswordChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetUserDemographicFields", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserDemographicFields(string customerName, string token) {
            object[] results = this.Invoke("GetUserDemographicFields", new object[] {
                        customerName,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDemographicFieldsAsync(string customerName, string token) {
            this.GetUserDemographicFieldsAsync(customerName, token, null);
        }
        
        /// <remarks/>
        public void GetUserDemographicFieldsAsync(string customerName, string token, object userState) {
            if ((this.GetUserDemographicFieldsOperationCompleted == null)) {
                this.GetUserDemographicFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDemographicFieldsOperationCompleted);
            }
            this.InvokeAsync("GetUserDemographicFields", new object[] {
                        customerName,
                        token}, this.GetUserDemographicFieldsOperationCompleted, userState);
        }
        
        private void OnGetUserDemographicFieldsOperationCompleted(object arg) {
            if ((this.GetUserDemographicFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDemographicFieldsCompleted(this, new GetUserDemographicFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetPassword", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPassword(string customerName, string token, string userName, string newPassword) {
            object[] results = this.Invoke("SetPassword", new object[] {
                        customerName,
                        token,
                        userName,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPasswordAsync(string customerName, string token, string userName, string newPassword) {
            this.SetPasswordAsync(customerName, token, userName, newPassword, null);
        }
        
        /// <remarks/>
        public void SetPasswordAsync(string customerName, string token, string userName, string newPassword, object userState) {
            if ((this.SetPasswordOperationCompleted == null)) {
                this.SetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPasswordOperationCompleted);
            }
            this.InvokeAsync("SetPassword", new object[] {
                        customerName,
                        token,
                        userName,
                        newPassword}, this.SetPasswordOperationCompleted, userState);
        }
        
        private void OnSetPasswordOperationCompleted(object arg) {
            if ((this.SetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPasswordCompleted(this, new SetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetPasswordRequirements", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPasswordRequirements(string customerName, string token, string userName, bool mustChangePassword, int previousPasswordMatches, bool passwordExpirationRequired, string passwordExpirationDate, int maxLoginFailures, double hoursToLock) {
            object[] results = this.Invoke("SetPasswordRequirements", new object[] {
                        customerName,
                        token,
                        userName,
                        mustChangePassword,
                        previousPasswordMatches,
                        passwordExpirationRequired,
                        passwordExpirationDate,
                        maxLoginFailures,
                        hoursToLock});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPasswordRequirementsAsync(string customerName, string token, string userName, bool mustChangePassword, int previousPasswordMatches, bool passwordExpirationRequired, string passwordExpirationDate, int maxLoginFailures, double hoursToLock) {
            this.SetPasswordRequirementsAsync(customerName, token, userName, mustChangePassword, previousPasswordMatches, passwordExpirationRequired, passwordExpirationDate, maxLoginFailures, hoursToLock, null);
        }
        
        /// <remarks/>
        public void SetPasswordRequirementsAsync(string customerName, string token, string userName, bool mustChangePassword, int previousPasswordMatches, bool passwordExpirationRequired, string passwordExpirationDate, int maxLoginFailures, double hoursToLock, object userState) {
            if ((this.SetPasswordRequirementsOperationCompleted == null)) {
                this.SetPasswordRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPasswordRequirementsOperationCompleted);
            }
            this.InvokeAsync("SetPasswordRequirements", new object[] {
                        customerName,
                        token,
                        userName,
                        mustChangePassword,
                        previousPasswordMatches,
                        passwordExpirationRequired,
                        passwordExpirationDate,
                        maxLoginFailures,
                        hoursToLock}, this.SetPasswordRequirementsOperationCompleted, userState);
        }
        
        private void OnSetPasswordRequirementsOperationCompleted(object arg) {
            if ((this.SetPasswordRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPasswordRequirementsCompleted(this, new SetPasswordRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetUserActiveStatus", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetUserActiveStatus(string customerName, string token, string userName, bool isActive) {
            object[] results = this.Invoke("SetUserActiveStatus", new object[] {
                        customerName,
                        token,
                        userName,
                        isActive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserActiveStatusAsync(string customerName, string token, string userName, bool isActive) {
            this.SetUserActiveStatusAsync(customerName, token, userName, isActive, null);
        }
        
        /// <remarks/>
        public void SetUserActiveStatusAsync(string customerName, string token, string userName, bool isActive, object userState) {
            if ((this.SetUserActiveStatusOperationCompleted == null)) {
                this.SetUserActiveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserActiveStatusOperationCompleted);
            }
            this.InvokeAsync("SetUserActiveStatus", new object[] {
                        customerName,
                        token,
                        userName,
                        isActive}, this.SetUserActiveStatusOperationCompleted, userState);
        }
        
        private void OnSetUserActiveStatusOperationCompleted(object arg) {
            if ((this.SetUserActiveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserActiveStatusCompleted(this, new SetUserActiveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetUserDemographics", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetUserDemographics(string customerName, string token, string userName, DemographicField[] userDemographics) {
            object[] results = this.Invoke("SetUserDemographics", new object[] {
                        customerName,
                        token,
                        userName,
                        userDemographics});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserDemographicsAsync(string customerName, string token, string userName, DemographicField[] userDemographics) {
            this.SetUserDemographicsAsync(customerName, token, userName, userDemographics, null);
        }
        
        /// <remarks/>
        public void SetUserDemographicsAsync(string customerName, string token, string userName, DemographicField[] userDemographics, object userState) {
            if ((this.SetUserDemographicsOperationCompleted == null)) {
                this.SetUserDemographicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserDemographicsOperationCompleted);
            }
            this.InvokeAsync("SetUserDemographics", new object[] {
                        customerName,
                        token,
                        userName,
                        userDemographics}, this.SetUserDemographicsOperationCompleted, userState);
        }
        
        private void OnSetUserDemographicsOperationCompleted(object arg) {
            if ((this.SetUserDemographicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserDemographicsCompleted(this, new SetUserDemographicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetUserLockStatus", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetUserLockStatus(string customerName, string token, string userName, bool isLocked) {
            object[] results = this.Invoke("SetUserLockStatus", new object[] {
                        customerName,
                        token,
                        userName,
                        isLocked});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserLockStatusAsync(string customerName, string token, string userName, bool isLocked) {
            this.SetUserLockStatusAsync(customerName, token, userName, isLocked, null);
        }
        
        /// <remarks/>
        public void SetUserLockStatusAsync(string customerName, string token, string userName, bool isLocked, object userState) {
            if ((this.SetUserLockStatusOperationCompleted == null)) {
                this.SetUserLockStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserLockStatusOperationCompleted);
            }
            this.InvokeAsync("SetUserLockStatus", new object[] {
                        customerName,
                        token,
                        userName,
                        isLocked}, this.SetUserLockStatusOperationCompleted, userState);
        }
        
        private void OnSetUserLockStatusOperationCompleted(object arg) {
            if ((this.SetUserLockStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserLockStatusCompleted(this, new SetUserLockStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetUsername", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetUsername(string customerName, string token, string userName, string newUserName) {
            object[] results = this.Invoke("SetUsername", new object[] {
                        customerName,
                        token,
                        userName,
                        newUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetUsernameAsync(string customerName, string token, string userName, string newUserName) {
            this.SetUsernameAsync(customerName, token, userName, newUserName, null);
        }
        
        /// <remarks/>
        public void SetUsernameAsync(string customerName, string token, string userName, string newUserName, object userState) {
            if ((this.SetUsernameOperationCompleted == null)) {
                this.SetUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUsernameOperationCompleted);
            }
            this.InvokeAsync("SetUsername", new object[] {
                        customerName,
                        token,
                        userName,
                        newUserName}, this.SetUsernameOperationCompleted, userState);
        }
        
        private void OnSetUsernameOperationCompleted(object arg) {
            if ((this.SetUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUsernameCompleted(this, new SetUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetAllGroups", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllGroups(string customerName, string token) {
            object[] results = this.Invoke("GetAllGroups", new object[] {
                        customerName,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync(string customerName, string token) {
            this.GetAllGroupsAsync(customerName, token, null);
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync(string customerName, string token, object userState) {
            if ((this.GetAllGroupsOperationCompleted == null)) {
                this.GetAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllGroups", new object[] {
                        customerName,
                        token}, this.GetAllGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllGroupsOperationCompleted(object arg) {
            if ((this.GetAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupsCompleted(this, new GetAllGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetGroupsForUser", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupsForUser(string customerName, string token, string userName) {
            object[] results = this.Invoke("GetGroupsForUser", new object[] {
                        customerName,
                        token,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupsForUserAsync(string customerName, string token, string userName) {
            this.GetGroupsForUserAsync(customerName, token, userName, null);
        }
        
        /// <remarks/>
        public void GetGroupsForUserAsync(string customerName, string token, string userName, object userState) {
            if ((this.GetGroupsForUserOperationCompleted == null)) {
                this.GetGroupsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupsForUserOperationCompleted);
            }
            this.InvokeAsync("GetGroupsForUser", new object[] {
                        customerName,
                        token,
                        userName}, this.GetGroupsForUserOperationCompleted, userState);
        }
        
        private void OnGetGroupsForUserOperationCompleted(object arg) {
            if ((this.GetGroupsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupsForUserCompleted(this, new GetGroupsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetGroupActiveStatus", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupActiveStatus(string customerName, string token, string groupName) {
            object[] results = this.Invoke("GetGroupActiveStatus", new object[] {
                        customerName,
                        token,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupActiveStatusAsync(string customerName, string token, string groupName) {
            this.GetGroupActiveStatusAsync(customerName, token, groupName, null);
        }
        
        /// <remarks/>
        public void GetGroupActiveStatusAsync(string customerName, string token, string groupName, object userState) {
            if ((this.GetGroupActiveStatusOperationCompleted == null)) {
                this.GetGroupActiveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupActiveStatusOperationCompleted);
            }
            this.InvokeAsync("GetGroupActiveStatus", new object[] {
                        customerName,
                        token,
                        groupName}, this.GetGroupActiveStatusOperationCompleted, userState);
        }
        
        private void OnGetGroupActiveStatusOperationCompleted(object arg) {
            if ((this.GetGroupActiveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupActiveStatusCompleted(this, new GetGroupActiveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetUsersInGroup", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUsersInGroup(string customerName, string token, string groupName) {
            object[] results = this.Invoke("GetUsersInGroup", new object[] {
                        customerName,
                        token,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersInGroupAsync(string customerName, string token, string groupName) {
            this.GetUsersInGroupAsync(customerName, token, groupName, null);
        }
        
        /// <remarks/>
        public void GetUsersInGroupAsync(string customerName, string token, string groupName, object userState) {
            if ((this.GetUsersInGroupOperationCompleted == null)) {
                this.GetUsersInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersInGroupOperationCompleted);
            }
            this.InvokeAsync("GetUsersInGroup", new object[] {
                        customerName,
                        token,
                        groupName}, this.GetUsersInGroupOperationCompleted, userState);
        }
        
        private void OnGetUsersInGroupOperationCompleted(object arg) {
            if ((this.GetUsersInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersInGroupCompleted(this, new GetUsersInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetGroupPrivileges", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupPrivileges(string customerName, string token, string groupName) {
            object[] results = this.Invoke("GetGroupPrivileges", new object[] {
                        customerName,
                        token,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupPrivilegesAsync(string customerName, string token, string groupName) {
            this.GetGroupPrivilegesAsync(customerName, token, groupName, null);
        }
        
        /// <remarks/>
        public void GetGroupPrivilegesAsync(string customerName, string token, string groupName, object userState) {
            if ((this.GetGroupPrivilegesOperationCompleted == null)) {
                this.GetGroupPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupPrivilegesOperationCompleted);
            }
            this.InvokeAsync("GetGroupPrivileges", new object[] {
                        customerName,
                        token,
                        groupName}, this.GetGroupPrivilegesOperationCompleted, userState);
        }
        
        private void OnGetGroupPrivilegesOperationCompleted(object arg) {
            if ((this.GetGroupPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupPrivilegesCompleted(this, new GetGroupPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetGroupApps", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupApps(string customerName, string token, string groupName, bool includeInactive) {
            object[] results = this.Invoke("GetGroupApps", new object[] {
                        customerName,
                        token,
                        groupName,
                        includeInactive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupAppsAsync(string customerName, string token, string groupName, bool includeInactive) {
            this.GetGroupAppsAsync(customerName, token, groupName, includeInactive, null);
        }
        
        /// <remarks/>
        public void GetGroupAppsAsync(string customerName, string token, string groupName, bool includeInactive, object userState) {
            if ((this.GetGroupAppsOperationCompleted == null)) {
                this.GetGroupAppsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupAppsOperationCompleted);
            }
            this.InvokeAsync("GetGroupApps", new object[] {
                        customerName,
                        token,
                        groupName,
                        includeInactive}, this.GetGroupAppsOperationCompleted, userState);
        }
        
        private void OnGetGroupAppsOperationCompleted(object arg) {
            if ((this.GetGroupAppsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupAppsCompleted(this, new GetGroupAppsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetGroupFormTemplates", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupFormTemplates(string customerName, string token, string groupName, bool includeInactive) {
            object[] results = this.Invoke("GetGroupFormTemplates", new object[] {
                        customerName,
                        token,
                        groupName,
                        includeInactive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupFormTemplatesAsync(string customerName, string token, string groupName, bool includeInactive) {
            this.GetGroupFormTemplatesAsync(customerName, token, groupName, includeInactive, null);
        }
        
        /// <remarks/>
        public void GetGroupFormTemplatesAsync(string customerName, string token, string groupName, bool includeInactive, object userState) {
            if ((this.GetGroupFormTemplatesOperationCompleted == null)) {
                this.GetGroupFormTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupFormTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetGroupFormTemplates", new object[] {
                        customerName,
                        token,
                        groupName,
                        includeInactive}, this.GetGroupFormTemplatesOperationCompleted, userState);
        }
        
        private void OnGetGroupFormTemplatesOperationCompleted(object arg) {
            if ((this.GetGroupFormTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupFormTemplatesCompleted(this, new GetGroupFormTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/AddGroup", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddGroup(string customerName, string token, string groupName, DemographicField[] groupDemographics, string[] privilegeList, string[] userList, string[] templateList, string[] appList) {
            object[] results = this.Invoke("AddGroup", new object[] {
                        customerName,
                        token,
                        groupName,
                        groupDemographics,
                        privilegeList,
                        userList,
                        templateList,
                        appList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupAsync(string customerName, string token, string groupName, DemographicField[] groupDemographics, string[] privilegeList, string[] userList, string[] templateList, string[] appList) {
            this.AddGroupAsync(customerName, token, groupName, groupDemographics, privilegeList, userList, templateList, appList, null);
        }
        
        /// <remarks/>
        public void AddGroupAsync(string customerName, string token, string groupName, DemographicField[] groupDemographics, string[] privilegeList, string[] userList, string[] templateList, string[] appList, object userState) {
            if ((this.AddGroupOperationCompleted == null)) {
                this.AddGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupOperationCompleted);
            }
            this.InvokeAsync("AddGroup", new object[] {
                        customerName,
                        token,
                        groupName,
                        groupDemographics,
                        privilegeList,
                        userList,
                        templateList,
                        appList}, this.AddGroupOperationCompleted, userState);
        }
        
        private void OnAddGroupOperationCompleted(object arg) {
            if ((this.AddGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupCompleted(this, new AddGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/AddUserToGroup", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddUserToGroup(string customerName, string token, string userName, string groupName) {
            object[] results = this.Invoke("AddUserToGroup", new object[] {
                        customerName,
                        token,
                        userName,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(string customerName, string token, string userName, string groupName) {
            this.AddUserToGroupAsync(customerName, token, userName, groupName, null);
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(string customerName, string token, string userName, string groupName, object userState) {
            if ((this.AddUserToGroupOperationCompleted == null)) {
                this.AddUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserToGroup", new object[] {
                        customerName,
                        token,
                        userName,
                        groupName}, this.AddUserToGroupOperationCompleted, userState);
        }
        
        private void OnAddUserToGroupOperationCompleted(object arg) {
            if ((this.AddUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToGroupCompleted(this, new AddUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/AddAppToGroup", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddAppToGroup(string customerName, string token, string appId, string groupName) {
            object[] results = this.Invoke("AddAppToGroup", new object[] {
                        customerName,
                        token,
                        appId,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAppToGroupAsync(string customerName, string token, string appId, string groupName) {
            this.AddAppToGroupAsync(customerName, token, appId, groupName, null);
        }
        
        /// <remarks/>
        public void AddAppToGroupAsync(string customerName, string token, string appId, string groupName, object userState) {
            if ((this.AddAppToGroupOperationCompleted == null)) {
                this.AddAppToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAppToGroupOperationCompleted);
            }
            this.InvokeAsync("AddAppToGroup", new object[] {
                        customerName,
                        token,
                        appId,
                        groupName}, this.AddAppToGroupOperationCompleted, userState);
        }
        
        private void OnAddAppToGroupOperationCompleted(object arg) {
            if ((this.AddAppToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAppToGroupCompleted(this, new AddAppToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/AddFormTemplateToGroup", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddFormTemplateToGroup(string customerName, string token, string formId, string groupName) {
            object[] results = this.Invoke("AddFormTemplateToGroup", new object[] {
                        customerName,
                        token,
                        formId,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFormTemplateToGroupAsync(string customerName, string token, string formId, string groupName) {
            this.AddFormTemplateToGroupAsync(customerName, token, formId, groupName, null);
        }
        
        /// <remarks/>
        public void AddFormTemplateToGroupAsync(string customerName, string token, string formId, string groupName, object userState) {
            if ((this.AddFormTemplateToGroupOperationCompleted == null)) {
                this.AddFormTemplateToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFormTemplateToGroupOperationCompleted);
            }
            this.InvokeAsync("AddFormTemplateToGroup", new object[] {
                        customerName,
                        token,
                        formId,
                        groupName}, this.AddFormTemplateToGroupOperationCompleted, userState);
        }
        
        private void OnAddFormTemplateToGroupOperationCompleted(object arg) {
            if ((this.AddFormTemplateToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFormTemplateToGroupCompleted(this, new AddFormTemplateToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetGroupDemographicFields", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupDemographicFields(string customerName, string token) {
            object[] results = this.Invoke("GetGroupDemographicFields", new object[] {
                        customerName,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupDemographicFieldsAsync(string customerName, string token) {
            this.GetGroupDemographicFieldsAsync(customerName, token, null);
        }
        
        /// <remarks/>
        public void GetGroupDemographicFieldsAsync(string customerName, string token, object userState) {
            if ((this.GetGroupDemographicFieldsOperationCompleted == null)) {
                this.GetGroupDemographicFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupDemographicFieldsOperationCompleted);
            }
            this.InvokeAsync("GetGroupDemographicFields", new object[] {
                        customerName,
                        token}, this.GetGroupDemographicFieldsOperationCompleted, userState);
        }
        
        private void OnGetGroupDemographicFieldsOperationCompleted(object arg) {
            if ((this.GetGroupDemographicFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupDemographicFieldsCompleted(this, new GetGroupDemographicFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/RemoveUserFromGroup", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveUserFromGroup(string customerName, string token, string userName, string groupName) {
            object[] results = this.Invoke("RemoveUserFromGroup", new object[] {
                        customerName,
                        token,
                        userName,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(string customerName, string token, string userName, string groupName) {
            this.RemoveUserFromGroupAsync(customerName, token, userName, groupName, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(string customerName, string token, string userName, string groupName, object userState) {
            if ((this.RemoveUserFromGroupOperationCompleted == null)) {
                this.RemoveUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromGroup", new object[] {
                        customerName,
                        token,
                        userName,
                        groupName}, this.RemoveUserFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromGroupOperationCompleted(object arg) {
            if ((this.RemoveUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromGroupCompleted(this, new RemoveUserFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/RemoveAppFromGroup", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveAppFromGroup(string customerName, string token, string appId, string groupName) {
            object[] results = this.Invoke("RemoveAppFromGroup", new object[] {
                        customerName,
                        token,
                        appId,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAppFromGroupAsync(string customerName, string token, string appId, string groupName) {
            this.RemoveAppFromGroupAsync(customerName, token, appId, groupName, null);
        }
        
        /// <remarks/>
        public void RemoveAppFromGroupAsync(string customerName, string token, string appId, string groupName, object userState) {
            if ((this.RemoveAppFromGroupOperationCompleted == null)) {
                this.RemoveAppFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAppFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveAppFromGroup", new object[] {
                        customerName,
                        token,
                        appId,
                        groupName}, this.RemoveAppFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveAppFromGroupOperationCompleted(object arg) {
            if ((this.RemoveAppFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAppFromGroupCompleted(this, new RemoveAppFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/RemoveFormTemplateFromGroup", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveFormTemplateFromGroup(string customerName, string token, string formId, string groupName) {
            object[] results = this.Invoke("RemoveFormTemplateFromGroup", new object[] {
                        customerName,
                        token,
                        formId,
                        groupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFormTemplateFromGroupAsync(string customerName, string token, string formId, string groupName) {
            this.RemoveFormTemplateFromGroupAsync(customerName, token, formId, groupName, null);
        }
        
        /// <remarks/>
        public void RemoveFormTemplateFromGroupAsync(string customerName, string token, string formId, string groupName, object userState) {
            if ((this.RemoveFormTemplateFromGroupOperationCompleted == null)) {
                this.RemoveFormTemplateFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFormTemplateFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveFormTemplateFromGroup", new object[] {
                        customerName,
                        token,
                        formId,
                        groupName}, this.RemoveFormTemplateFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveFormTemplateFromGroupOperationCompleted(object arg) {
            if ((this.RemoveFormTemplateFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFormTemplateFromGroupCompleted(this, new RemoveFormTemplateFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetGroupActiveStatus", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetGroupActiveStatus(string customerName, string token, string groupName, bool isActive) {
            object[] results = this.Invoke("SetGroupActiveStatus", new object[] {
                        customerName,
                        token,
                        groupName,
                        isActive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetGroupActiveStatusAsync(string customerName, string token, string groupName, bool isActive) {
            this.SetGroupActiveStatusAsync(customerName, token, groupName, isActive, null);
        }
        
        /// <remarks/>
        public void SetGroupActiveStatusAsync(string customerName, string token, string groupName, bool isActive, object userState) {
            if ((this.SetGroupActiveStatusOperationCompleted == null)) {
                this.SetGroupActiveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGroupActiveStatusOperationCompleted);
            }
            this.InvokeAsync("SetGroupActiveStatus", new object[] {
                        customerName,
                        token,
                        groupName,
                        isActive}, this.SetGroupActiveStatusOperationCompleted, userState);
        }
        
        private void OnSetGroupActiveStatusOperationCompleted(object arg) {
            if ((this.SetGroupActiveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGroupActiveStatusCompleted(this, new SetGroupActiveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetGroupName", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetGroupName(string customerName, string token, string groupName, string newGroupName) {
            object[] results = this.Invoke("SetGroupName", new object[] {
                        customerName,
                        token,
                        groupName,
                        newGroupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetGroupNameAsync(string customerName, string token, string groupName, string newGroupName) {
            this.SetGroupNameAsync(customerName, token, groupName, newGroupName, null);
        }
        
        /// <remarks/>
        public void SetGroupNameAsync(string customerName, string token, string groupName, string newGroupName, object userState) {
            if ((this.SetGroupNameOperationCompleted == null)) {
                this.SetGroupNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGroupNameOperationCompleted);
            }
            this.InvokeAsync("SetGroupName", new object[] {
                        customerName,
                        token,
                        groupName,
                        newGroupName}, this.SetGroupNameOperationCompleted, userState);
        }
        
        private void OnSetGroupNameOperationCompleted(object arg) {
            if ((this.SetGroupNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGroupNameCompleted(this, new SetGroupNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/GetPrivileges", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrivileges(string customerName, string token) {
            object[] results = this.Invoke("GetPrivileges", new object[] {
                        customerName,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(string customerName, string token) {
            this.GetPrivilegesAsync(customerName, token, null);
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(string customerName, string token, object userState) {
            if ((this.GetPrivilegesOperationCompleted == null)) {
                this.GetPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrivilegesOperationCompleted);
            }
            this.InvokeAsync("GetPrivileges", new object[] {
                        customerName,
                        token}, this.GetPrivilegesOperationCompleted, userState);
        }
        
        private void OnGetPrivilegesOperationCompleted(object arg) {
            if ((this.GetPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrivilegesCompleted(this, new GetPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mi-corporation.com/SetGroupPrivileges", RequestNamespace="http://www.mi-corporation.com/", ResponseNamespace="http://www.mi-corporation.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetGroupPrivileges(string customerName, string token, string groupName, string[] groupPrivileges) {
            object[] results = this.Invoke("SetGroupPrivileges", new object[] {
                        customerName,
                        token,
                        groupName,
                        groupPrivileges});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetGroupPrivilegesAsync(string customerName, string token, string groupName, string[] groupPrivileges) {
            this.SetGroupPrivilegesAsync(customerName, token, groupName, groupPrivileges, null);
        }
        
        /// <remarks/>
        public void SetGroupPrivilegesAsync(string customerName, string token, string groupName, string[] groupPrivileges, object userState) {
            if ((this.SetGroupPrivilegesOperationCompleted == null)) {
                this.SetGroupPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGroupPrivilegesOperationCompleted);
            }
            this.InvokeAsync("SetGroupPrivileges", new object[] {
                        customerName,
                        token,
                        groupName,
                        groupPrivileges}, this.SetGroupPrivilegesOperationCompleted, userState);
        }
        
        private void OnSetGroupPrivilegesOperationCompleted(object arg) {
            if ((this.SetGroupPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGroupPrivilegesCompleted(this, new SetGroupPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mi-corporation.com/")]
    public partial class DemographicField {
        
        private string nameField;
        
        private string descriptionField;
        
        private bool requiredField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetKeyPairCompletedEventHandler(object sender, GetKeyPairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeyPairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeyPairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAuthTokenCompletedEventHandler(object sender, GetAuthTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetServerConnectionSpeedCompletedEventHandler(object sender, GetServerConnectionSpeedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerConnectionSpeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerConnectionSpeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetServerInformationCompletedEventHandler(object sender, GetServerInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUserInformationCompletedEventHandler(object sender, GetUserInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAllowPasswordChangeCompletedEventHandler(object sender, GetAllowPasswordChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllowPasswordChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllowPasswordChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUserDemographicFieldsCompletedEventHandler(object sender, GetUserDemographicFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDemographicFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDemographicFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetPasswordCompletedEventHandler(object sender, SetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetPasswordRequirementsCompletedEventHandler(object sender, SetPasswordRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPasswordRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPasswordRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetUserActiveStatusCompletedEventHandler(object sender, SetUserActiveStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserActiveStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserActiveStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetUserDemographicsCompletedEventHandler(object sender, SetUserDemographicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserDemographicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserDemographicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetUserLockStatusCompletedEventHandler(object sender, SetUserLockStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserLockStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserLockStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetUsernameCompletedEventHandler(object sender, SetUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAllGroupsCompletedEventHandler(object sender, GetAllGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGroupsForUserCompletedEventHandler(object sender, GetGroupsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGroupActiveStatusCompletedEventHandler(object sender, GetGroupActiveStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupActiveStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupActiveStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUsersInGroupCompletedEventHandler(object sender, GetUsersInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGroupPrivilegesCompletedEventHandler(object sender, GetGroupPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGroupAppsCompletedEventHandler(object sender, GetGroupAppsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupAppsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupAppsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGroupFormTemplatesCompletedEventHandler(object sender, GetGroupFormTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupFormTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupFormTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddGroupCompletedEventHandler(object sender, AddGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddUserToGroupCompletedEventHandler(object sender, AddUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddAppToGroupCompletedEventHandler(object sender, AddAppToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAppToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAppToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddFormTemplateToGroupCompletedEventHandler(object sender, AddFormTemplateToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFormTemplateToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFormTemplateToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGroupDemographicFieldsCompletedEventHandler(object sender, GetGroupDemographicFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupDemographicFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupDemographicFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RemoveUserFromGroupCompletedEventHandler(object sender, RemoveUserFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RemoveAppFromGroupCompletedEventHandler(object sender, RemoveAppFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAppFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAppFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RemoveFormTemplateFromGroupCompletedEventHandler(object sender, RemoveFormTemplateFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFormTemplateFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFormTemplateFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetGroupActiveStatusCompletedEventHandler(object sender, SetGroupActiveStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetGroupActiveStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetGroupActiveStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetGroupNameCompletedEventHandler(object sender, SetGroupNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetGroupNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetGroupNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPrivilegesCompletedEventHandler(object sender, GetPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetGroupPrivilegesCompletedEventHandler(object sender, SetGroupPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetGroupPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetGroupPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591